name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # 后端测试和构建
  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        # 这里可以添加后端测试命令
        echo "Backend tests would run here"
        # python -m pytest tests/
    
    - name: Lint code
      run: |
        # 这里可以添加代码检查命令
        echo "Backend linting would run here"
        # flake8 app/
        # black --check app/

  # 前端测试和构建
  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: |
        # 这里可以添加前端测试命令
        echo "Frontend tests would run here"
        # npm test -- --coverage --watchAll=false
    
    - name: Lint code
      run: |
        # 这里可以添加代码检查命令
        echo "Frontend linting would run here"
        # npm run lint
    
    - name: Build frontend
      run: npm run build
      env:
        REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
        REACT_APP_WS_URL: ${{ secrets.REACT_APP_WS_URL }}

  # 安全扫描
  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'

  # 部署通知
  notify-deployment:
    runs-on: ubuntu-latest
    needs: [backend-test, frontend-test, security-scan]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Notify deployment success
      run: |
        echo "✅ All tests passed! Deployment to Railway and Vercel should be successful."
        echo "Backend: https://linku1-production.up.railway.app"
        echo "Frontend: https://your-vercel-domain.vercel.app"

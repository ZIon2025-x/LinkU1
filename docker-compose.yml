version: '3.8'

services:
  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: linku-postgres
    environment:
      POSTGRES_DB: linku_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - linku-network

  # Redis缓存
  redis:
    image: redis:7-alpine
    container_name: linku-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - linku-network

  # LinkU后端应用
  backend:
    build: .
    container_name: linku-backend
    environment:
      - DATABASE_URL=postgresql+psycopg2://postgres:123123@postgres:5432/linku_db
      - ASYNC_DATABASE_URL=postgresql+asyncpg://postgres:123123@postgres:5432/linku_db
      - REDIS_URL=redis://redis:6379/0
      - USE_REDIS=true
      - SECRET_KEY=production-secret-key-change-this
      - ACCESS_TOKEN_EXPIRE_MINUTES=15
      - REFRESH_TOKEN_EXPIRE_DAYS=30
    ports:
      - "8000:8000"
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - linku-network
    restart: unless-stopped

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: linku-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - linku-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  linku-network:
    driver: bridge
